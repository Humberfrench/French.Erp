// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Validation = Dietcode.Core.DomainValidator;
using French.Erp.Domain.Validations.Clientes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

#nullable disable

namespace French.Erp.Domain.Entities
{
    [Table("Faturamento")]
    public partial class Faturamento
    {
        private readonly Validation.ValidationResult validationResult;
        private bool? isValid;

        public Faturamento()
        {
            validationResult = new Validation.ValidationResult();
            isValid = null;
        }

        [Key, DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int FaturamentoId { get; set; }
        [Column]
        public int ClienteId { get; set; }
        [Column]
        public short Ano { get; set; }
        [Column]
        public byte Mes { get; set; }
        [Column]
        public decimal Valor { get; set; }
        [Column]
        public bool Faturado { get; set; }
        [Column]
        public int UsuarioId { get; set; }

        [ForeignKey("ClienteId")]
        [InverseProperty("Faturamentos")]
        public virtual Cliente Cliente { get; set; }


        #region Dados de Validação
        public virtual Validation.ValidationResult ValidationResult => validationResult;

        public virtual bool IsValid()
        {
            if (!isValid.HasValue)
            {
                var validationDados = Validar();
                if (!validationDados.Valid)
                {
                    validationDados.Erros.ToList().ForEach(e => validationResult.Add(e));
                }
                return validationResult.Valid;
            }
            return isValid.Value;

        }

        public virtual Validation.ValidationResult Validar()
        {
            //var entidadeNomeValidate = new ClienteEstaConsistente();
            //var validationResultEntidade = entidadeNomeValidate.Validar(this);
            //isValid = validationResultEntidade.Valid;
            //if (!validationResultEntidade.Valid)
            //{
            //    validationResultEntidade.Erros.ToList().ForEach(e => validationResult.Add(e));
            //}

            return validationResult;
        }

        #endregion

    }
}